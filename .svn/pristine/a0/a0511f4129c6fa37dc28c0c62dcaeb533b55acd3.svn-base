var assetsName = ''; //资产名称
var assetsList = ''; //勾选的资产
var alreadyAssets = ''; //已存在的资产
var reg = /^\+?[1-9]\d*$/; //正则判断大于0的正整数



// 提交数据
function submitData() {
    var allData = $("#tb_departments").bootstrapTable('getData');
    var selectData = [];


    if (allData.length == 0) {
        layer.msg('请添加资产');
        return;
    }

    for (var i = 0; i < allData.length; i++) {
        selectData[i] = allData[i];
        if (selectData[i].aoAllotNumber == null) {
            layer.msg('请输入数量');
            return;
        }
        if (!reg.test(selectData[i].aoAllotNumber)) {
            layer.msg('数量必须是大于0的正整数');
            return;
        }

        if (selectData[i].aoUnit == null) {
            layer.msg('请输入单位');
            return;
        }
    }

    console.log('提交的数据', allData);


    $.ajax({
        url: port + '/v1/assetAllot/insertAssetAllotConfirm',
        type: 'post',
        data: {
            aaolist: JSON.stringify(allData), //添加的数据
            aaCoding: $('#applyListNum').val(), //调拨单号
            aaAllotDate: $('#allotDate').val(), //调拨日期
            aaFormerUsername: $('#originalUsePerson').val(), //原使用人
            aaOutDepartmentname: $('#originalUseDepart').val(), //原使用部门
            aaInDepartmentname: $('#importDepart').val(), //调入部门
            aaNewUsername: $('#newUsePerson').val(), //新使用人
            aaReason: $('#allotReason').val(), //调拨原因
        },
        success: function(res) {
            console.log('提交返回', res);
            if (res > 0) {
                sessionStorage.setItem('isSubmit', 1);
                layer.msg('添加成功');
            }
        }
    });


}

// 清空所有数据
function romoveAllData() {
    $('#tb_departments').bootstrapTable('removeAll');
}

$(function() {

    //1.初始化Table
    var oTable = new TableInit();
    oTable.Init();

    // //2.初始化Button的点击事件
    var oButtonInit = new ButtonInit();
    oButtonInit.Init();


    // 获取登录用户
    $.ajax({
        url: port + '/v1/applybuyAsset/getCurrentUser',
        type: 'post',
        success: function(res) {
            console.log('模拟登陆用户：', res);
            $('#applyPerson').attr('value', res.pName); //申请人员
            $('#personJobNumber').attr('value', res.pJobnum); //人员工号
            $('#applyDepartment').attr('value', res.depId); //申请部门
        }
    });



    // 申请日期
    $('#applyDate').attr('value', getDate());

    // 获取系统日期
    function getDate() {
        var myDate = new Date();
        var myYear = myDate.getFullYear(); //年
        var myMonth = myDate.getMonth() + 1; //月
        var myDay = myDate.getDate(); //日
        var myHour = myDate.getHours(); //时
        var myMin = myDate.getMinutes(); //分

        if (myMonth < 10) {
            myMonth = '0' + myMonth;
        }
        if (myDate < 10) {
            myDate = '0' + myDate;
        }
        if (myHour < 10) {
            myHour = '0' + myHour;
        }
        if (myMin < 10) {
            myMin = '0' + myMin;
        }
        return myYear + '-' + myMonth + '-' + myDay + ' ' + myHour + ':' + myMin;
    }


});

//查询
function searchBtn() {
    console.log('查询');
    if ($('#orgName').val() == '' && $('#orgSimpleName').val() == '') {
        return;
    }
    $("#tb_departments").bootstrapTable('refresh');
}
//重置
function resetBtn() {
    console.log('重置');
    location.reload();
}


// 编辑表格数据
function saveData(index, field, value) {
    $('#tb_departments').bootstrapTable('updateCell', {
        index: index, //行索引
        field: field, //列名
        value: value //cell值
    });
    console.log('编辑后更新>>>', index, field, value);
}



//初始化Table
var TableInit = function() {
    var oTableInit = new Object();
    oTableInit.Init = function() {
        $('#tb_departments').bootstrapTable({
            url: port + '/v1/assetAllot/getAssets',
            undefinedText: '',
            method: 'get',
            locale: 'zh-CN',
            toolbar: '#toolbar', //工具按钮用哪个容器
            striped: true, //是否显示行间隔色
            cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
            pagination: true, //是否显示分页（*）
            sortable: true, //是否启用排序
            sortOrder: "asc", //排序方式
            queryParams: oTableInit.queryParams, //查询参数
            sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
            pageNum: 1, //初始化加载第一页，默认第一页
            pageSize: 8, //每页的记录行数（*）
            pageList: [10], //可供选择的每页的行数（*）
            search: false, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
            strictSearch: true,
            showColumns: true, //是否显示所有的列
            showRefresh: true, //是否显示刷新按钮
            minimumCountColumns: 2, //最少允许的列数
            // clickToSelect: true, //是否启用点击选中行
            // height: $(window).height(), //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
            uniqueId: "areaId", //每一行的唯一标识，一般为主键列
            showToggle: false, //是否显示详细视图和列表视图的切换按钮
            cardView: false, //是否显示详细视图
            detailView: false, //是否显示父子表
            columns: [{
                checkbox: true
            }, {
                field: 'aoAssetsName',
                align: 'center',
                title: '资产名称'
            }, {
                field: 'aoAssetsType',
                align: 'center',
                title: '资产类别'
            }, {
                field: 'aoAllotNumber',
                align: 'center',
                title: '数量',
            }, {
                field: 'aoUnit',
                align: 'center',
                title: '单位'
            }],

            //得到查询的参数
            queryParams: function(params) {
                var temp = { //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    pageSize: params.limit, //页面大小
                    pageNum: (params.offset / params.limit) + 1, //页码
                    assetType: assetsName, //资产名称
                    assetListString: assetsList, //勾选的资产
                    alreadyAssetListString: alreadyAssets, //已存在的资产
                };
                return temp;
            },

            //加载成功时执行
            onLoadSuccess: function(data) {
                console.log(data)
                $('.fixed-table-container').css({ 'height': $(window).height() - 210 + 'px' });
                $('.panel-body').css({ 'height': $(window).height() + 'px' });
            },
            //加载失败时执行
            onLoadError: function() {
                $('.fixed-table-container').css({ 'height': $(window).height() - 210 + 'px' });
                $('.panel-body').css({ 'height': $(window).height() + 'px' });
            },
            onClickRow: function(row, $element) {
                console.log(row);
            },
            onDblClickCell: function(field, value, row, $element) {
                // console.log(field, value, row, $element)
                $element.attr('contenteditable', true);
                $('#tb_departments tr td:nth-child(2)').attr('contenteditable', false);
                $('#tb_departments tr td:nth-child(3)').attr('contenteditable', false);
                $element.blur(function() {
                    var index = $element.parent().data('index');
                    var tdValue = $element.html();
                    saveData(index, field, tdValue);
                });
            }
        });
    };

    return oTableInit;
};






// 工具栏按钮事件
var ButtonInit = function() {
    var oInit = new Object();

    oInit.Init = function() {


        // 添加
        $("#btn_add").on('click', function() {

            parent.layer.open({
                type: 2,
                title: '查询',
                area: ['900px', '500px'],
                btn: ['确定', '取消'],
                end: function() {
                    sessionStorage.removeItem('assetsName');
                    sessionStorage.removeItem('assetsList');

                },
                yes: function(index, layero) {
                    // 点击弹层确定执行iframe内的确定按钮事件
                    var body = parent.layer.getChildFrame('body', index);


                    // 执行iframe内选择资产的方法
                    parent.window[layero.find('iframe')[0]['name']].getAsset();

                    // 如果选择了资产才执行以下方法，否则会报错
                    if (sessionStorage.getItem('assetsList')) {
                        var addData = JSON.parse(sessionStorage.getItem('assetsList')); //追加的数据
                        $("#tb_departments").bootstrapTable('append', addData); //追加数据
                        $("#tb_departments").bootstrapTable('uncheckAll'); //追加完数据取消选择
                        parent.layer.close(index);
                    }

                },
                success: function(layero, index) {
                    layero.find('.layui-layer-btn0').css('background', '#27AAE1');
                },
                btnAlign: 'c',
                content: 'search.html'
            });
        });



        // 删除表格数据（假删除）
        $("#btn_delete").on('click', function() {

            var a = $("#tb_departments").bootstrapTable('getSelections');

            var delData = []; //要删除的数据

            if (a.length == 0) {
                layer.msg('请选择要删除的数据');
            } else {
                //获取选中的ID
                for (var i = 0; i < a.length; i++) {
                    delData[i] = a[i].aoId;
                }
                console.log('删除>>>', delData);

                $("#tb_departments").bootstrapTable('remove', { field: 'aoId', values: delData });

            }
        });





    };
    return oInit;
};